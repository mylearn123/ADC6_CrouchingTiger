The Liskov Substitution Principle (LSP, lsp) is a concept in Object Oriented Programming that states: 
"Derived classes must be substitutable for their base classes"

The "Liskov's Substitution Principle" is just a way of ensuring that
inheritance is used correctly
	
For example:
Let's assume a class Bird with the method "fly()".
Ostrich is a bird and hence it inherits the Bird class. But it cannot fly.
i.e it cannot inherit the Bird class.
This violates the Liskov's Substitution Principle.

So, even if in real world this seems natural, in the class design, Ostrich  should not inherit the Bird class, 
and there should be a separate class for birds that can't really fly and Ostrich should inherit that.
So we can resolve the Bied class into Flying and Non-Flying sub-classes.


